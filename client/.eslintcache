[{"/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/index.js":"1","/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/App.js":"2","/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/reportWebVitals.js":"3","/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/Components/Login/index.jsx":"4","/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/Components/Registration/index.jsx":"5","/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/Components/DataDisplay/index.jsx":"6"},{"size":500,"mtime":1607199387876,"results":"7","hashOfConfig":"8"},{"size":1951,"mtime":1607238652123,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607199387877,"results":"10","hashOfConfig":"8"},{"size":2011,"mtime":1607240397810,"results":"11","hashOfConfig":"8"},{"size":1893,"mtime":1607240427655,"results":"12","hashOfConfig":"8"},{"size":3521,"mtime":1607240534653,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"i9de1l",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/index.js",[],["30","31"],"/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/App.js",["32"],"import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Login from \"./Components/Login/index.jsx\";\nimport Register from \"./Components/Registration/index.jsx\";\nimport DataDisplay from \"./Components/DataDisplay/index.jsx\";\nimport Module from 'module';\n\nclass App extends Component {\n  // Initialize state\n  state = {\n    authenticated: null, // start with null so that the page loads empty until tokens are checked\n    register: false,\n  }\n\n  componentDidMount() {\n    this.checkLoginToken(); // this stores a session to see if we have already logged in!\n  }\n\n  checkLoginToken = async () => {\n    const validToken = await axios(\n      {\n        method: \"POST\", \n        url: \"/api/checkLoginTokenIsValid\",\n        data: {\n          token: localStorage.getItem('token')\n        }\n      }\n    );\n\n    this.displayData(validToken.data.auth === undefined ? false : validToken.data.auth);\n  }\n\n  displayData = (auth) => {\n    if (this.state.authenticated === true) {\n\n    }\n\n    this.setState({authenticated: auth});\n  }\n\n  updateRegistration = (registering) => {\n    this.setState({\n      register: registering\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div style={this.state.authenticated === false && this.state.register === false ? {} : { display : 'none' } }>\n          <Login displayData={ this.displayData } updateRegistration={ this.updateRegistration } authenticated={ this.state.authenticated }  />\n        </div>\n\n        <div style={this.state.authenticated === false && this.state.register === true ? {} : { display : 'none' } }>\n          <Register displayData={ this.displayData } updateRegistration={ this.updateRegistration } />\n        </div>\n\n        <div style={this.state.authenticated === true ? {} : { display : 'none' } }>\n          <DataDisplay authenticatedFirstTime={this.state.authenticated} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/reportWebVitals.js",[],"/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/Components/Login/index.jsx",["33","34"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Login extends Component {\n\tconstructor(props) {\n    \tsuper(props);\n\n    \tthis.state = {\n    \t\tusername: '',\n    \t\tpassword: '',\n    \t};\n    }\n\n    updateUserName(e) {\n\t\tthis.state.username = e.target.value;\n\t}\n\n\tupdatePassword(e) {\n\t\tthis.state.password = e.target.value;\n\t}\n\n\thandleKeyPress(e) {\n\t  if(e.key === 'Enter'){\n\t    this.checkAuth();\n\t  }\n\t}\n\n\tcheckAuth = async () => {\n\t\tconst { username, password } = this.state;\n\n\t\tif (username === '' || password === '')\n\t\t\talert(\"Incomplete login info!\");\n\n\t\tconst loginAttempt = await axios(\n\t      {\n\t        method: \"POST\", \n\t        url: \"/api/login\",\n\t        data: {\n\t        \tusername: username,\n\t\t\t  \tpassword: password,\n\t        }\n\t      }\n\t    );\n\n\t    if (loginAttempt.data.auth === true) {\n\t    \talert(\"Authenticated!\");\n\t\t\tthis.props.displayData(true);\n\t\t\tlocalStorage.setItem('token', loginAttempt.data.token); // set our token for easy login\n\t  \t\tlocalStorage.setItem('user', JSON.stringify(loginAttempt.data.user));\n\t  \t\tlocalStorage.setItem('username', username);\n\t  \t\tlocalStorage.setItem('password', password);\n\t    } else {\n\t    \talert(\"Invalid username or password!\");\n\t    }\n\t}\n\n    render() {\n\t\treturn (\n\t\t\t<div className=\"marginAddedTop\">\n\t\t\t\t<h2>Login Page!</h2>\n\n\t\t\t\t<input className=\"block inputs\" type=\"text\" placeholder=\"username (admin)\" onKeyPress={ (event) => this.handleKeyPress(event) } onChange= { (event) => this.updateUserName(event) }></input>\n\t\t\t\t<input className=\"block marginAddedLeft inputs\" type=\"password\" placeholder=\"password (test)\" onKeyPress={ (event) => this.handleKeyPress(event) } onChange= { (event) => this.updatePassword(event) }></input>\n\t\t\t\t<button className=\"inputs confirmBtn\" onClick={ () => this.checkAuth() }>Login</button>\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"inputs registerBtn marginAddedSmaller\" onClick={ () => this.props.updateRegistration(true) }>Register</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Login;","/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/Components/Registration/index.jsx",["35","36"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Login extends Component {\n\tconstructor(props) {\n    \tsuper(props);\n\n    \tthis.state = {\n    \t\tusername: '',\n    \t\tpassword: '',\n    \t};\n    }\n\n    updateUserName(e) {\n\t\tthis.state.username = e.target.value;\n\t}\n\n\tupdatePassword(e) {\n\t\tthis.state.password = e.target.value;\n\t}\n\n\thandleKeyPress(e) {\n\t  if(e.key === 'Enter'){\n\t    this.createUser();\n\t  }\n\t}\n\n\tcreateUser = async () => {\n\n\t\tconst { username, password } = this.state;\n\n\t\tif (username === '' || password === '')\n\t\t\talert(\"Incomplete registration info!\");\n\n\t\tconst registration = await axios(\n\t      {\n\t        method: \"POST\", \n\t        url: \"/api/register\",\n\t        data: {\n\t        \tusername: username,\n\t\t\t  \tpassword: password,\n\t        }\n\t      }\n\t    );\n\n\t\tthis.props.displayData(true);\n\t\tthis.props.updateRegistration(false);\n\t    localStorage.setItem('token', registration.data.token); // set our token for easy login\n\t    localStorage.setItem('user', JSON.stringify(registration.data.user));\n\t    localStorage.setItem('username', username);\n\t  \tlocalStorage.setItem('password', password);\n\t}\n\n    render() {\n\n\t\treturn (\n\t\t\t<div className=\"marginAddedTop\">\n\t\t\t\t<h2>Registration Page!</h2>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label>Username: </label>\n\t\t\t\t\t<input className=\"block inputs\" type=\"text\" placeholder=\"Bob\" onKeyPress={ (event) => this.handleKeyPress(event) } onChange= { (event) => this.updateUserName(event) }></input>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label>Password: </label>\n\t\t\t\t\t<input className=\"block inputs\" type=\"password\" placeholder=\"Testing123\" onKeyPress={ (event) => this.handleKeyPress(event) } onChange= { (event) => this.updatePassword(event) }></input>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"inputs confirmBtn marginAddedSmaller\" onClick={ () => this.createUser() }>Register</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Login;","/Users/brennankolotinsky/Documents/codingProjects/scheduler/client/src/Components/DataDisplay/index.jsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":7,"column":8,"nodeType":"43","messageId":"44","endLine":7,"endColumn":14},{"ruleId":"45","severity":1,"message":"46","line":15,"column":3,"nodeType":"47","endLine":15,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":19,"column":3,"nodeType":"47","endLine":19,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":15,"column":3,"nodeType":"47","endLine":15,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":19,"column":3,"nodeType":"47","endLine":19,"endColumn":13},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'Module' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]